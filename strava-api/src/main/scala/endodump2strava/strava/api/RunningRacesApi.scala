/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package endodump2strava.strava.api

import endodump2strava.strava.model.Fault
import endodump2strava.strava.model.RunningRace
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object RunningRacesApi {

  /**
   * Returns a running race for a given identifier.
   * 
   * Expected answers:
   *   code 200 : RunningRace (Representation of a running race.)
   *   code 0 : Fault (Unexpected error.)
   * 
   * @param id The identifier of the running race.
   */
  def getRunningRaceById(id: Long): ApiRequest[RunningRace] =
    ApiRequest[RunningRace](ApiMethods.GET, "https://www.strava.com/api/v3", "/running_races/{id}", "application/json")
      .withPathParam("id", id)
      .withSuccessResponse[RunningRace](200)
      .withDefaultErrorResponse[Fault]
        /**
   * Returns a list running races based on a set of search criteria.
   * 
   * Expected answers:
   *   code 200 : Seq[RunningRace] (Representation of a list of running race.)
   *   code 0 : Fault (Unexpected error.)
   * 
   * @param year Filters the list by a given year.
   */
  def getRunningRaces(year: Option[Int] = None): ApiRequest[Seq[RunningRace]] =
    ApiRequest[Seq[RunningRace]](ApiMethods.GET, "https://www.strava.com/api/v3", "/running_races", "application/json")
      .withQueryParam("year", year)
      .withSuccessResponse[Seq[RunningRace]](200)
      .withDefaultErrorResponse[Fault]
      

}

