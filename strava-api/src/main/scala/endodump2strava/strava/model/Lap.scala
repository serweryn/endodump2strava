/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package endodump2strava.strava.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Lap (
  /* The unique identifier of this lap */
  id: Option[Long] = None,
  activity: Option[MetaActivity] = None,
  athlete: Option[MetaAthlete] = None,
  /* The lap's average cadence */
  averageCadence: Option[Float] = None,
  /* The lap's average speed */
  averageSpeed: Option[Float] = None,
  /* The lap's distance, in meters */
  distance: Option[Float] = None,
  /* The lap's elapsed time, in seconds */
  elapsedTime: Option[Int] = None,
  /* The start index of this effort in its activity's stream */
  startIndex: Option[Int] = None,
  /* The end index of this effort in its activity's stream */
  endIndex: Option[Int] = None,
  /* The index of this lap in the activity it belongs to */
  lapIndex: Option[Int] = None,
  /* The maximum speed of this lat, in meters per second */
  maxSpeed: Option[Float] = None,
  /* The lap's moving time, in seconds */
  movingTime: Option[Int] = None,
  /* The name of the lap */
  name: Option[String] = None,
  /* The athlete's pace zone during this lap */
  paceZone: Option[Int] = None,
  split: Option[Int] = None,
  /* The time at which the lap was started. */
  startDate: Option[DateTime] = None,
  /* The time at which the lap was started in the local timezone. */
  startDateLocal: Option[DateTime] = None,
  /* The elevation gain of this lap, in meters */
  totalElevationGain: Option[Float] = None
) extends ApiModel


