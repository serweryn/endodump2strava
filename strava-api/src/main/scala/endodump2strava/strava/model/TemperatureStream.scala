/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package endodump2strava.strava.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class TemperatureStream (
  /* The number of data points in this stream */
  originalSize: Option[Int] = None,
  /* The level of detail (sampling) in which this stream was returned */
  resolution: Option[TemperatureStreamEnums.Resolution] = None,
  /* The base series used in the case the stream was downsampled */
  seriesType: Option[TemperatureStreamEnums.SeriesType] = None,
  /* The sequence of temperature values for this stream, in celsius degrees */
  data: Option[Seq[Int]] = None
) extends ApiModel

object TemperatureStreamEnums {

  type Resolution = Resolution.Value
  type SeriesType = SeriesType.Value
  object Resolution extends Enumeration {
    val Low = Value("low")
    val Medium = Value("medium")
    val High = Value("high")
  }

  object SeriesType extends Enumeration {
    val Distance = Value("distance")
    val Time = Value("time")
  }

}

